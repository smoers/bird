<?php

namespace Proxies\__CG__\ORG\BirdBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cycle extends \ORG\BirdBundle\Entity\Cycle implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'id', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'title', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'yncycle', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'nbrvolume', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'comment', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'createdate', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'authors', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'books', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'type', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'linkFieldsCycles'];
        }

        return ['__isInitialized__', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'id', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'title', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'yncycle', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'nbrvolume', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'comment', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'createdate', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'authors', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'books', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'type', '' . "\0" . 'ORG\\BirdBundle\\Entity\\Cycle' . "\0" . 'linkFieldsCycles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cycle $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setYncycle($yncycle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYncycle', [$yncycle]);

        return parent::setYncycle($yncycle);
    }

    /**
     * {@inheritDoc}
     */
    public function getYncycle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYncycle', []);

        return parent::getYncycle();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrvolume($nbrvolume)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrvolume', [$nbrvolume]);

        return parent::setNbrvolume($nbrvolume);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrvolume()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrvolume', []);

        return parent::getNbrvolume();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedate($createdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedate', [$createdate]);

        return parent::setCreatedate($createdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedate', []);

        return parent::getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthor(\ORG\BirdBundle\Entity\Author $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthor', [$author]);

        return parent::addAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthor(\ORG\BirdBundle\Entity\Author $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthor', [$author]);

        return parent::removeAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function addBook(\ORG\BirdBundle\Entity\Book $book)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBook', [$book]);

        return parent::addBook($book);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBook(\ORG\BirdBundle\Entity\Book $book)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBook', [$book]);

        return parent::removeBook($book);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthors', []);

        return parent::getAuthors();
    }

    /**
     * {@inheritDoc}
     */
    public function getBooks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooks', []);

        return parent::getBooks();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\ORG\BirdBundle\Entity\System $type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function addLinkfieldscycle(\ORG\BirdBundle\Entity\LinkFieldsCycle $linkFieldsCycle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLinkfieldscycle', [$linkFieldsCycle]);

        return parent::addLinkfieldscycle($linkFieldsCycle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLinkfieldscycle(\ORG\BirdBundle\Entity\LinkFieldsCycle $linkFieldsCycle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLinkfieldscycle', [$linkFieldsCycle]);

        return parent::removeLinkfieldscycle($linkFieldsCycle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkfieldscycles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkfieldscycles', []);

        return parent::getLinkfieldscycles();
    }

}
